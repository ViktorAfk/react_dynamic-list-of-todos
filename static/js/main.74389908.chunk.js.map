{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","helpers.tsx","index.tsx"],"names":["TodoList","props","filteredList","setSelectedTodo","selectedTodo","className","map","todo","id","completed","cn","title","onClick","type","TodoFilter","query","setQuery","setSelectedOption","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setTodo","useState","selectedUser","setSelectedUser","userId","useEffect","getUser","href","email","name","App","renderedTodos","setRenderedList","selectedOption","isLoaded","setIsLoaded","finally","selectOption","filteredByQuery","filter","preparedQuery","trim","toLowerCase","includes","getfilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74389908.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  filteredList: Todo[];\n  setSelectedTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n}\nexport const TodoList: React.FC<Props> = (props) => {\n  const {\n    filteredList,\n    setSelectedTodo,\n    selectedTodo,\n  } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredList.map(todo => (\n          <tr key={todo.id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              { todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn(\n                {\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                onClick={() => setSelectedTodo(todo)}\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i className={cn('far',\n                    {\n                      'fa-eye-slash': selectedTodo?.id === todo.id,\n                      'fa-eye': selectedTodo?.id !== todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  query: string;\n  setQuery: (value: string) => void;\n  setSelectedOption: (value: string) => void;\n}\nexport const TodoFilter:React.FC<Props> = (props) => {\n  const { query, setQuery, setSelectedOption } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={(event) => setSelectedOption(event.target.value)}\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={query}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todo: Todo;\n  setTodo: (value: null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, setTodo }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const { userId, id, completed } = todo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setSelectedUser);\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setSelectedUser(null);\n                setTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              { completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { getfilteredTodos } from './helpers';\n\nexport const App: React.FC = () => {\n  const [renderedTodos, setRenderedList] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [selectedOption, setSelectedOption] = useState('All');\n  const [isLoaded, setIsLoaded] = useState<boolean>(true);\n\n  useEffect(() => {\n    getTodos()\n      .then(setRenderedList)\n      .finally(() => setIsLoaded(false));\n  }, []);\n\n  const filteredList = getfilteredTodos(renderedTodos, query, selectedOption);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setSelectedOption={setSelectedOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded\n                ? <Loader />\n                : (\n                  <TodoList\n                    filteredList={filteredList}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal todo={selectedTodo} setTodo={setSelectedTodo} />}\n    </>\n  );\n};\n","import { Todo } from './types/Todo';\n\nexport const getfilteredTodos = (\n  renderedTodos: Todo[],\n  query: string,\n  selectOption: string,\n): Todo[] => {\n  let filteredByQuery = renderedTodos.filter(todo => {\n    const { title } = todo;\n    const preparedQuery = query.trim().toLowerCase();\n    const preparedTitle = title.toLowerCase();\n\n    return preparedTitle.includes(preparedQuery);\n  });\n\n  switch (selectOption) {\n    case 'completed':\n      filteredByQuery = filteredByQuery.filter(todo => todo.completed);\n      break;\n    case 'active':\n      filteredByQuery = filteredByQuery.filter(todo => !todo.completed);\n      break;\n    default:\n      return filteredByQuery;\n  }\n\n  return filteredByQuery;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}